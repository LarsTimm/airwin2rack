# ConsoleXChannel is the fully featured, biggest Airwindows console.

ConsoleX is my ultimate mixing system, whether for retro vibe or the next big thing, and I'll try to explain what I've built into it. There's too much here to tell all at once, so here are the highlights.

The basic signal flow uses Stonefire's Kalman filters combined with Air3 for an air band, and applies the dynamics you'd find on a big-console channel strip, but parallel across Stone and Fire bands.That means it's easy to apply simple compression that still lets sub-lows through, or to tighten the deep bass with gating, or to do a variety of wild dynamics tricks. It's like two big-console dynamics sections in one (or, broad-band EQ-like tone shaping with a difference).

Four EQ bands lend themselves to sharp, sonorous areas of focus. When not in use it's like no processing is there, but dig in and the bass, low mid, high mid and treble really thump, punch, honk and glitter. The EQ design's similar to some things about ToTape7 and 8's head bump, but more adaptable. Each band is fed by raw sound pre-compression, so they saturate the audio with peak energy, but they gate along with Stone or Fire so you can still clamp 'em if needed.

There's a special trick for those willing to run at elevated sample rates: the lowpass and highpass are distributed, spread out through the signal flow of the whole plugin. They bypass when turned all the way down (these things follow SSL rules, like no highpass or lowpass being counterclockwise, and the narrowest Q of the EQs being counterclockwise) but when you crack open the lowpass it begins doing a supersonic filtering that'll directly address aliasing through the plugin and the whole mix, while allowing nonlinearities to produce the harmonics you'd get off analog gear.

There's a special knob, Discontinuity. It's available as a standalone plugin, but ConsoleX puts Discontinuity on every channel and on the 2-buss. Hard counterclockwise means you're applying air nonlinearity as if your sound topped out at 70 dB: in other words, practically none. Middle is around 100 dB and you'll begin to feel the effects. Beyond that, you're getting into air distortion beyond the hugest PA systems, just because it might be fun. This is your key to making stuff sound huge, sound loud, sound completely beyond what we're used to hearing from DAWs of the last thirty years. Treat it like dynamics: wisely, and with caution. It's there to set the peak apparent loudness of your track.

There's a vibey meter based on what I learned from Airwindows Meter, but instead of producing charts and measurements to study, it produces a light show. Blue light represents sonority at whatever volume those peaks are at (quiet is at the center, clipping is the edges of the meter). Where Meter draws red and green dots on white to represent peaks brighter or mellower than the optimum, the ConsoleX meter sustains those lights and reverses them, against a background of black. That means if you see red light, that's bassy. If you see green flashes, that's treble. And if the meter lights up a brilliant cyan, that's the bright end of maximum intensity. So you can watch for red or purple if you're looking for bass, greens and cyans if you want brightness, blue for the loudest parts, and you won't get over-analytical about it. The ConsoleX meter shows you roughly how loud the peaks are, and their character, in a way you can vibe to without losing mixing focus.

There's a ConsoleXPre plugin, which is all the tone shaping stuff of the Channels and only lacks the Console processing. This is for if you want to run ToTape7 or 8 on channels for things like heavy guitars, but you want to condition the sound going TO the tape, and then also have full control over the sound coming back OFF the tape. There's great missives and narratives by the ever-respected Slipperman on how to do just this, and it absolutely works in the box using ToTape and these plugins. You can also run things like reverbs into other full ConsoleXChannels, by putting Console9Buss at the top of that aux channel, adding the reverb or what have you, then back to ConsoleXChannel to fully control and augment the processing (that's something I saw Chris Lord-Alge doing in videos, and it's fantastic)

Lastly, every single thing I've mentioned exists exactly the same way on the Buss plugin (decoding the output of the Channel plugins, please maintain unity gain between Channel and Buss) so anything you can do on a channel you can do on the 2-buss. This drastically changes the character of the mix, making ConsoleX future-proof: it ought to be able to handle anything you can dream up.

And then, I'm introducing AirwindowsGlobals, a user-accessible configuring text file that lets you do completely outrageous things with the look of all Airwindows Pamplejuce-based plugins. And you'd think that would mean 'the ConsoleX plugins', except that Airwindows Meter already works with AirwindowsGlobals. Surprise! There will be more.

And for my fellow Reaper users, with the help of Airwindows fan Robert Kennedy, I bring you Airwindowmation. This is a Reaper script, that should work for Mac and Windows directly if you can install ReaLearn and get Reaper scripts working on your machine and sort out the trickiness of control surfaces. I simplified it as much as I could. It is not actually automation, it's grouping. You can take a bank of faders (like the 12 long-throw faders on my Yaeltex dedicated ConsoleX control surface) and colorcode them, and then have a given colored fader automatically control the 'Fader' parameter on ALL ConsoleXChannel instances with a matching track color, on the fly. Much like how you can update AirwindowsGlobals on the fly. It's deeply spontaneous, which I think is essential for modern human music-making.

I'll be doing some livestreams for the purpose of walking through mixes using ConsoleX, and will resume regular plugin posting in January at some point. I look forward to sharing all this with everyoneâ€¦ and diving into the music making like I haven't been able to do for years. Join me!


